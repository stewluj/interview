{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stewl\\\\OneDrive\\\\Desktop\\\\interview\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport AudioRecorder from \"./components/AudioRecorder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = \"https://interview-2-x3za.onrender.com\"; // Replace with your Render backend URL\n\nfunction App() {\n  _s();\n  const [question, setQuestion] = useState(\"Click 'Start' to get your question.\");\n  const [responseText, setResponseText] = useState(null);\n  const [nextQuestion, setNextQuestion] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Function to fetch a new question from the backend\n  const fetchQuestion = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`${BACKEND_URL}/ask`);\n      if (!response.ok) throw new Error(\"Failed to fetch question.\");\n      const data = await response.json();\n      setQuestion(data.question);\n      setLoading(false);\n    } catch (err) {\n      setError(\"Error fetching question. Check backend.\");\n      setLoading(false);\n    }\n  };\n\n  // Fetch initial question on page load\n  useEffect(() => {\n    fetchQuestion();\n  }, []);\n\n  // Function to handle audio upload and receive AI-generated follow-up question\n  const handleUpload = async audioBlob => {\n    const formData = new FormData();\n    formData.append(\"audio\", audioBlob, \"response.wav\");\n    try {\n      setLoading(true);\n      const response = await fetch(`${BACKEND_URL}/respond`, {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) throw new Error(\"Failed to send audio.\");\n      const data = await response.json();\n      setResponseText(data.transcribed_response);\n      setNextQuestion(data.next_question);\n      setLoading(false);\n    } catch (err) {\n      setError(\"Error sending response. Check backend.\");\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI Interview App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Question:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 41\n      }, this), \" \", question]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(AudioRecorder, {\n      onUpload: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), responseText && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Answer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: responseText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Next Question:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: nextQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchQuestion,\n      style: {\n        marginTop: \"10px\",\n        padding: \"10px\",\n        cursor: \"pointer\"\n      },\n      children: \"Get New Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HRc+cmv5YE/G/Np8oY7cQ4kxX8w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","AudioRecorder","jsxDEV","_jsxDEV","BACKEND_URL","App","_s","question","setQuestion","responseText","setResponseText","nextQuestion","setNextQuestion","loading","setLoading","error","setError","fetchQuestion","response","fetch","ok","Error","data","json","err","handleUpload","audioBlob","formData","FormData","append","method","body","transcribed_response","next_question","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onUpload","color","onClick","marginTop","cursor","_c","$RefreshReg$"],"sources":["C:/Users/stewl/OneDrive/Desktop/interview/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport AudioRecorder from \"./components/AudioRecorder\";\r\n\r\nconst BACKEND_URL = \"https://interview-2-x3za.onrender.com\"; // Replace with your Render backend URL\r\n\r\nfunction App() {\r\n  const [question, setQuestion] = useState(\"Click 'Start' to get your question.\");\r\n  const [responseText, setResponseText] = useState(null);\r\n  const [nextQuestion, setNextQuestion] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Function to fetch a new question from the backend\r\n  const fetchQuestion = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(`${BACKEND_URL}/ask`);\r\n      if (!response.ok) throw new Error(\"Failed to fetch question.\");\r\n      const data = await response.json();\r\n      setQuestion(data.question);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(\"Error fetching question. Check backend.\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch initial question on page load\r\n  useEffect(() => {\r\n    fetchQuestion();\r\n  }, []);\r\n\r\n  // Function to handle audio upload and receive AI-generated follow-up question\r\n  const handleUpload = async (audioBlob) => {\r\n    const formData = new FormData();\r\n    formData.append(\"audio\", audioBlob, \"response.wav\");\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(`${BACKEND_URL}/respond`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) throw new Error(\"Failed to send audio.\");\r\n      const data = await response.json();\r\n      setResponseText(data.transcribed_response);\r\n      setNextQuestion(data.next_question);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(\"Error sending response. Check backend.\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n      <h1>AI Interview App</h1>\r\n\r\n      {loading ? <p>Loading...</p> : <p><strong>Question:</strong> {question}</p>}\r\n\r\n      <AudioRecorder onUpload={handleUpload} />\r\n\r\n      {responseText && (\r\n        <div>\r\n          <h3>Your Answer:</h3>\r\n          <p>{responseText}</p>\r\n          <h3>Next Question:</h3>\r\n          <p>{nextQuestion}</p>\r\n        </div>\r\n      )}\r\n\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      <button onClick={fetchQuestion} style={{ marginTop: \"10px\", padding: \"10px\", cursor: \"pointer\" }}>\r\n        Get New Question\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,WAAW,GAAG,uCAAuC,CAAC,CAAC;;AAE7D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,qCAAqC,CAAC;EAC/E,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMkB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGf,WAAW,MAAM,CAAC;MAClD,IAAI,CAACc,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9D,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCf,WAAW,CAACc,IAAI,CAACf,QAAQ,CAAC;MAC1BO,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZR,QAAQ,CAAC,yCAAyC,CAAC;MACnDF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACAd,SAAS,CAAC,MAAM;IACdiB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,YAAY,GAAG,MAAOC,SAAS,IAAK;IACxC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,SAAS,EAAE,cAAc,CAAC;IAEnD,IAAI;MACFZ,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGf,WAAW,UAAU,EAAE;QACrD0B,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEJ;MACR,CAAC,CAAC;MAEF,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1D,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCb,eAAe,CAACY,IAAI,CAACU,oBAAoB,CAAC;MAC1CpB,eAAe,CAACU,IAAI,CAACW,aAAa,CAAC;MACnCnB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZR,QAAQ,CAAC,wCAAwC,CAAC;MAClDF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEX,OAAA;IAAK+B,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnDlC,OAAA;MAAAkC,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAExB5B,OAAO,gBAAGV,OAAA;MAAAkC,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAAGtC,OAAA;MAAAkC,QAAA,gBAAGlC,OAAA;QAAAkC,QAAA,EAAQ;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAClC,QAAQ;IAAA;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE3EtC,OAAA,CAACF,aAAa;MAACyC,QAAQ,EAAEjB;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAExChC,YAAY,iBACXN,OAAA;MAAAkC,QAAA,gBACElC,OAAA;QAAAkC,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBtC,OAAA;QAAAkC,QAAA,EAAI5B;MAAY;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBtC,OAAA;QAAAkC,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBtC,OAAA;QAAAkC,QAAA,EAAI1B;MAAY;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CACN,EAEA1B,KAAK,iBAAIZ,OAAA;MAAG+B,KAAK,EAAE;QAAES,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEtB;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEjDtC,OAAA;MAAQyC,OAAO,EAAE3B,aAAc;MAACiB,KAAK,EAAE;QAAEW,SAAS,EAAE,MAAM;QAAET,OAAO,EAAE,MAAM;QAAEU,MAAM,EAAE;MAAU,CAAE;MAAAT,QAAA,EAAC;IAElG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACnC,EAAA,CA1EQD,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AA4EZ,eAAeA,GAAG;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}